import axios from 'axios';
import { Lesson } from './types';

function generateId(): string {
  return 'lesson_' + Math.random().toString(36).substring(2, 15) + 
         Math.random().toString(36).substring(2, 15) + 
         '_' + Date.now();
}

export async function generateLessonWithGroq(data: {
  courseTopic: string;
  lessonTitle?: string;
  targetAudience: string;
  difficultyLevel: string;
  additionalInstructions?: string;
}): Promise<Lesson> {
  const GROQ_API_KEY = "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";

  const systemPrompt = `You are an educational content creator specializing in developing comprehensive lesson plans. 
Create a detailed lesson plan about the specified topic with the following sections:
- Title: Use the provided lesson title or create an appropriate one if none is provided
- Description: A brief overview of what the lesson covers
- Learning Outcomes: 3-5 specific, measurable outcomes
- Key Concepts: 4-6 important terms with their definitions
- Content: Main educational content broken into paragraphs
- Activities: 1-3 engaging activities with clear instructions
- Assessment: Appropriate assessment methods to evaluate learning

The lesson should be tailored to the specified target audience and difficulty level.`;

  const userPrompt = `Create a lesson plan with the following details:
Course Topic: ${data.courseTopic}
Lesson Title: ${data.lessonTitle || ""}
Target Audience: ${data.targetAudience}
Difficulty Level: ${data.difficultyLevel}
Additional Instructions: ${data.additionalInstructions || ""}

Return the response as a structured JSON object with these fields:
{
  "title": "string",
  "description": "string",
  "targetAudience": "string",
  "difficultyLevel": "string",
  "learningOutcomes": ["string"],
  "keyConcepts": [{"term": "string", "definition": "string"}],
  "content": "string with paragraphs separated by \\n\\n",
  "activities": [{"title": "string", "instructions": "string"}],
  "assessment": "string"
}

Do not include any explanatory text before or after the JSON. Respond only with valid JSON.`;

  try {
    const response = await axios.post(
      "https://api.groq.com/openai/v1/chat/completions",
      {
        model: "llama3-70b-8192",
        messages: [
          { role: "system", content: systemPrompt },
          { role: "user", content: userPrompt }
        ],
        temperature: 0.7,
        max_tokens: 2000,
        response_format: { type: "json_object" }
      },
      {
        headers: {
          Authorization: `Bearer ${GROQ_API_KEY}`,
          "Content-Type": "application/json",
        },
      }
    );

    const lessonContent = JSON.parse(response.data.choices[0].message.content);
    
    const now = new Date().toISOString();
    
    const lesson: Lesson = {
      id: generateId(),
      title: lessonContent.title || data.lessonTitle || data.courseTopic,
      description: lessonContent.description || `A lesson about ${data.courseTopic}`,
      targetAudience: lessonContent.targetAudience || data.targetAudience,
      difficultyLevel: (lessonContent.difficultyLevel || data.difficultyLevel) as 'beginner' | 'intermediate' | 'advanced',
      learningOutcomes: lessonContent.learningOutcomes || [],
      keyConcepts: lessonContent.keyConcepts || [],
      content: lessonContent.content || "",
      activities: lessonContent.activities || [],
      assessment: lessonContent.assessment || "",
      createdAt: now,
      updatedAt: now,
      status: 'draft',
      author: 'AI Generator'
    };

    return lesson;
  } catch (error) {
    console.error("Error generating lesson with Groq:", error);
    
    const now = new Date().toISOString();
    
    return {
      id: generateId(),
      title: data.lessonTitle || `Lesson on ${data.courseTopic}`,
      description: `This is a ${data.difficultyLevel} level lesson about ${data.courseTopic} for ${data.targetAudience}.`,
      targetAudience: data.targetAudience,
      difficultyLevel: data.difficultyLevel as 'beginner' | 'intermediate' | 'advanced',
      learningOutcomes: [
        'Understand key concepts related to the topic',
        'Apply theoretical knowledge to practical scenarios',
        'Analyze and evaluate related problems'
      ],
      keyConcepts: [
        { 
          term: 'Sample Concept 1', 
          definition: 'Definition of the first key concept related to this lesson.' 
        },
        { 
          term: 'Sample Concept 2', 
          definition: 'Definition of the second key concept related to this lesson.' 
        }
      ],
      content: 'This is sample content for the lesson. In a real implementation, this would be comprehensive content generated by Groq AI based on the course topic and lesson title.\n\nThis paragraph serves as an example of what the content might look like, covering various aspects of the topic in detail.',
      activities: [
        {
          title: 'Practice Activity',
          instructions: 'Complete this activity to practice the concepts learned in this lesson. Follow these steps:\n\n1. First step of the activity\n2. Second step of the activity\n3. Reflect on your learning'
        }
      ],
      assessment: 'This is a sample assessment for the lesson. It would typically include questions, problems, or tasks to evaluate student understanding of the material presented in the lesson.',
      createdAt: now,
      updatedAt: now,
      status: 'draft',
      author: 'AI Generator'
    };
  }
}